// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SQLiteApp.Data;

#nullable disable

namespace SQLiteApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231209132545_dbpathupdate")]
    partial class dbpathupdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("SQLiteApp.Data.ExchangeRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("CurrencyRate")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("RateDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ExchangeRates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CurrencyName = "$",
                            CurrencyRate = 29.0,
                            RateDate = new DateTime(2023, 12, 9, 16, 25, 44, 993, DateTimeKind.Local).AddTicks(3770)
                        },
                        new
                        {
                            Id = 2,
                            CurrencyName = "€",
                            CurrencyRate = 31.0,
                            RateDate = new DateTime(2023, 12, 9, 16, 25, 44, 993, DateTimeKind.Local).AddTicks(3830)
                        },
                        new
                        {
                            Id = 3,
                            CurrencyName = "£",
                            CurrencyRate = 36.0,
                            RateDate = new DateTime(2023, 12, 9, 16, 25, 44, 993, DateTimeKind.Local).AddTicks(3840)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
